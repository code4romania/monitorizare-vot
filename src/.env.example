POSTGRES_PASSWORD=docker
POSTGRES_USER=docker
POSTGRES_DB=postgres


ASPNETCORE_URLS=http://+:80
# Development | Production
ASPNETCORE_ENVIRONMENT=Development
# can be empty
APPLICATION_INSIGHTS_INSTRUMENTATION_KEY= 

########## JWT #########################
JWT_ISSUER=VoteMonitorJwtIssuer
#check this
JWT_AUDIENCE=http://vote_monitor_api/
#use https://generate-secret.now.sh/32 to generate keys
JWT_SIGNING_KEY=SecretKeyOfDoomThatMustBeAMinimumNumberOfBytes
#########################################

DB_CONNECTION_STRING=Server=postgres;Port=5432;Database=vote-monitor-db;User Id=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};

########## Mobile Security ##############
INVALID_CREDENTIALS_ERROR_MESSAGE={ "error": "A aparut o eroare la logarea in aplicatie. Va rugam sa verificati ca ati introdus corect numarul de telefon si codul de acces, iar daca eroarea persista va rugam contactati serviciul de suport la numarul 07......" }
MOBILESECURITY_LOCKDEVICE=false
#########################################

########## Caching #####################
# NoCache | MemoryDistributedCache | RedisCache
CACHE_IMPLEMENTATION=NoCache
CACHE_HOURS=0
CACHE__MINUTES=30
CACHE__SECONDS=0
#########################################
# Fill when CACHE_IMPLEMENTATION = RedisCache
REDIS_CONFIGURATION=redis:6379,ssl=False,abortConnect=False
REDIS_INSTANCE_NAME=vote-monitor-cache
#########################################

########## Firebase #####################
# Path to your firebase credentials json file. This file should be copied inside the api container.
FIREBASESERVICE_SERVERKEY_PATH="./firebase/credentials.json"
#########################################

########## Hashing ######################
# ClearText | Hash
HASH_SERVICE_TYPE=ClearText
HASH_SALT=superSaltOfDoom
#########################################

########## File service #################
# LocalFileService | BlobService | S3Service
FILE_STORAGE_TYPE=LocalFileService

# Fill when FILE_STORAGE_TYPE = LocalFileService
FILESERVICE_NOTES_STORAGE_PATH="./upload/notes"
FILESERVICE_OBSERVERS_STORAGE_PATH="./upload/observers"
##########################################

# Fill when FILE_STORAGE_TYPE = BlobService
# this is the key from azurite (storage emulator) and it is ok to commit to git
BLOBSTORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;
BLOBSTORAGE_CONTAINER_NAME=vote-monitor-files
BLOBSTORAGE_SAS_BLOB_AVAILABILITY=43800
##########################################

# Fill when FILE_STORAGE_TYPE = S3Service
AWS_SERVICEURL=http://vote_monitor_localstack_s3:4566/
AWS_AWS_ACCESS_KEY_ID=key
AWS_AWS_SECRET_ACCESS_KEY=key
AWS_Region=eu-central-1

S3_BUCKET_NAME=vote-monitor-files
S3_PRESIGNED_URL_EXPIRATION_IN_MINUTES=10
##########################################

ENABLE_HEALTHCHECKS=false

DEFAULT_NGOID=0
OVERRIDE_DEFAULT_SORTING=false
CODE_OF_FIRST_TO_DISPLAY_COUNTY=

##################################################
# Postgress
POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
POSTGRES_USER=${POSTGRES_USER}
POSTGRES_DB=${POSTGRES_DB}
##################################################

##################################################
# Migrator
ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
##################################################

##################################################
# Seed
ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}     
SeedOptions__HashServiceType=${HASH_SERVICE_TYPE}
SeedOptions__OverrideExistingData=false
SeedOptions__PasswordSalt=${HASH_SALT}

SeedOptions__Ngos__C4R__Id=1
SeedOptions__Ngos__C4R__IsOrganizer=true
SeedOptions__Ngos__C4R__Name=Code4Romania

SeedOptions__Ngos__C4R__Admins__code4roadmin__Id=1
SeedOptions__Ngos__C4R__Admins__code4roadmin__Password=password

SeedOptions__Ngos__C4R__Observers__076__Id=2
SeedOptions__Ngos__C4R__Observers__076__Name=Test observer 1
SeedOptions__Ngos__C4R__Observers__076__Pin=1234
SeedOptions__Ngos__C4R__Observers__076__FromTeam=true

SeedOptions__Ngos__GUE__Id=2
SeedOptions__Ngos__GUE__IsOrganizer=False
SeedOptions__Ngos__GUE__Name=Guest NGO

SeedOptions__Ngos__GUE__Admins__guestngoadmin__Id=2
SeedOptions__Ngos__GUE__Admins__guestngoadmin__Password=password

SeedOptions__Ngos__GUE__Observers__074__Id=0
SeedOptions__Ngos__GUE__Observers__074__Name=Test observer 1
SeedOptions__Ngos__GUE__Observers__074__Pin=1234

SeedOptions__Ngos__GUE__Observers__075__Id=1
SeedOptions__Ngos__GUE__Observers__075__Name=Test observer 2
SeedOptions__Ngos__GUE__Observers__075__Pin=1234
##################################################

##################################################
# API
ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
ASPNETCORE_URLS=${ASPNETCORE_URLS}

ApplicationInsights__InstrumentationKey=${APPLICATION_INSIGHTS_INSTRUMENTATION_KEY}

JwtIssuerOptions__Issuer=${JWT_ISSUER}
JwtIssuerOptions__Audience=${JWT_AUDIENCE}
SecretKey=${JWT_SIGNING_KEY}

ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}

MobileSecurityOptions__InvalidCredentialsErrorMessage=${INVALID_CREDENTIALS_ERROR_MESSAGE}
MobileSecurityOptions__LockDevice=${MOBILESECURITY_LOCKDEVICE}

ApplicationCacheOptions__Implementation=${CACHE_IMPLEMENTATION}
ApplicationCacheOptions__Hours=${CACHE_HOURS}
ApplicationCacheOptions__Minutes=${CACHE__MINUTES}
ApplicationCacheOptions__Seconds=${CACHE__SECONDS}

RedisCacheOptions__Configuration=${REDIS_CONFIGURATION}
RedisCacheOptions__InstanceName=${REDIS_INSTANCE_NAME}

FirebaseServiceOptions__ServerKey=${FIREBASESERVICE_SERVERKEY_PATH}

HashOptions__Salt=${HASH_SALT}
HashOptions__ServiceType=${HASH_SERVICE_TYPE}

FileStorageType=${FILE_STORAGE_TYPE}

LocalFileStorageOptions__StoragePaths__Notes=${FILESERVICE_NOTES_STORAGE_PATH}
LocalFileStorageOptions__StoragePaths__Observers=${FILESERVICE_OBSERVERS_STORAGE_PATH}

BlobStorageOptions__ConnectionString=${BLOBSTORAGE_CONNECTION_STRING}
BlobStorageOptions__ContainerName=${BLOBSTORAGE_CONTAINER_NAME}
BlobStorageOptions__SASBlobAvailabilityInMinutes=${BLOBSTORAGE_SAS_BLOB_AVAILABILITY}

S3StorageOptions__BucketName=${S3_BUCKET_NAME}
S3StorageOptions__PresignedUrlExpirationInMinutes=${S3_PRESIGNED_URL_EXPIRATION_IN_MINUTES}
AWS__ServiceURL=${AWS_SERVICEURL}
AWS__AWS_ACCESS_KEY_ID=${AWS_AWS_ACCESS_KEY_ID}
AWS__AWS_SECRET_ACCESS_KEY=${AWS_AWS_SECRET_ACCESS_KEY}
AWS__Region=${AWS_Region}

DefaultNgoOptions__DefaultNgoId=${DEFAULT_NGOID}
PollingStationsOptions__OverrideDefaultSorting=${OVERRIDE_DEFAULT_SORTING}
PollingStationsOptions__CodeOfFirstToDisplayCounty=${CODE_OF_FIRST_TO_DISPLAY_COUNTY}

EnableHealthChecks=${ENABLE_HEALTHCHECKS}
##################################################

##################################################
# Local Stack
DEBUG=1
SERVICES=s3
EDGE_PORT=4566
AWS_DEFAULT_REGION=eu-central-1
AWS_ACCESS_KEY_ID=key
AWS_SECRET_ACCESS_KEY=key
##################################################


